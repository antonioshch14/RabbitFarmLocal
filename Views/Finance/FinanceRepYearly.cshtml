@model IEnumerable<RabbitFarmLocal.Models.FinRepModel>
@using static RabbitFarmLocal.BusinessLogic.FinReport;
@using static RabbitFarmLocal.Controllers.MyFunctions;
@{
    ViewData["Title"] = "FinanceRepYearly";
}

@if( ViewBag.StDat!=null)
{
    <h3>Финансовый отчет c @ViewBag.StDat до @ViewBag.FinDat</h3>

}
else{
<h3>Финансовый отчет за @ViewBag.year год (отчетные даты @ViewBag.finDates)</h3>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Month)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EarnedTotal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EarnedTotalWIthOurConsum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EatenByUs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SpentTotal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BenefitTotal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BenefitWithOurConsum)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-toggle="modal" data-target="#myModal-@item.DateFromStringForEdit">

                <div class="modal" id="myModal-@item.DateFromStringForEdit">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Отчет с @Html.DisplayFor(modelItem => item.DateFromString) по @Html.DisplayFor(modelItem => item.DateUntilString) (включительно) </h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>
                            <div class="modal-body">

                                <div>
                                    @Html.DisplayNameFor(model => model.EarnedTotal)
                                    @Html.DisplayFor(modelItem => item.EarnedTotal)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.EarnedTotalWIthOurConsum)
                                    @Html.DisplayFor(modelItem => item.EarnedTotalWIthOurConsum)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SoldAsMeat)
                                    @Html.DisplayFor(modelItem => item.SoldAsMeat)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SoldForBread)
                                    @Html.DisplayFor(modelItem => item.SoldForBread)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SoldCanned)
                                    @Html.DisplayFor(modelItem => item.SoldCanned)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.EatenByUs)
                                    @Html.DisplayFor(modelItem => item.EatenByUs)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SpentTotal)
                                    @Html.DisplayFor(modelItem => item.SpentTotal)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SpentOnGrain)
                                    @Html.DisplayFor(modelItem => item.SpentOnGrain)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SpentOnSuplim)
                                    @Html.DisplayFor(modelItem => item.SpentOnSuplim)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SpentOnHay)
                                    @Html.DisplayFor(modelItem => item.SpentOnHay)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SpentOnMed)
                                    @Html.DisplayFor(modelItem => item.SpentOnMed)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SpentOnBuild)
                                    @Html.DisplayFor(modelItem => item.SpentOnBuild)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.SpentOnRepair)
                                    @Html.DisplayFor(modelItem => item.SpentOnRepair)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.BenefitTotal)
                                    @Html.DisplayFor(modelItem => item.BenefitTotal)
                                </div>
                                <div>
                                    @Html.DisplayNameFor(model => model.BenefitWithOurConsum)
                                    @Html.DisplayFor(modelItem => item.BenefitWithOurConsum)
                                </div>

                            </div>


                        </div>
                    </div>

                </div>
                <td>
                    @Html.DisplayFor(modelItem => item.Month)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EarnedTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EarnedTotalWIthOurConsum)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.EatenByUs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SpentTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BenefitTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BenefitWithOurConsum)
                </td>
            </tr>
        }
        <tr @*class="table-primary"*@ style="font-weight: bold">
            <td>
                Итог
            </td>
            <td>
                @Model.Sum(x => x.EarnedTotal) 
            </td>
            <td>
                @Model.Sum(x => x.EarnedTotalWIthOurConsum)
            </td>

            <td>
                @Model.Sum(x => x.EatenByUs)
            </td>
            <td>
                @Model.Sum(x => x.SpentTotal)
            </td>
            <td>
                @Model.Sum(x => x.BenefitTotal)
            </td>
            <td>
                @Model.Sum(x => x.BenefitWithOurConsum)
            </td>
        </tr>
    </tbody>
</table>
<a class="btn btn-link" href="@Url.Action("SelectPeriodForFinRep")">Выбрать другие даты</a>
<vc:chartjs></vc:chartjs>
@if(DateTime.Now.Year > 2021)
            {
                int initialYear = 2021;
                int yearsForReport= DateTime.Now.Year - initialYear;
                
                
                for (int i = 0; i < yearsForReport; i++)
                {
                    List<FinRepModel> finRepHist = ReportForYear(initialYear + i);
                    FinRepHistory finRepHistYear = new FinRepHistory();
                    finRepHistYear.Year = initialYear + i;
                    foreach (FinRepModel finRep in finRepHist)
                    {
                        finRepHistYear.BenefitWithOurConsum += finRep.BenefitWithOurConsum;
                        finRepHistYear.BenefitTotal += finRep.BenefitTotal;
                        finRepHistYear.SpentTotal += finRep.SpentTotal;
                    }
                    //history.Add(finRepHistYear);
                    <div>
                        @finRepHistYear.Year
                        <span> @Html.DisplayNameFor(model => model.BenefitTotal) : @finRepHistYear.BenefitTotal </span>
                        <span> @Html.DisplayNameFor(model => model.SpentTotal) : @finRepHistYear.SpentTotal </span>
                        <span> @Html.DisplayNameFor(model => model.BenefitWithOurConsum) : @finRepHistYear.BenefitWithOurConsum </span>
                    </div>
                  
                }
               //ViewBag.FinRepHistory = history;
            }