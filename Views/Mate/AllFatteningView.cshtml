@model List<RabbitFarmLocal.Models.FatteningModel>
@using RabbitFarmLocal.Controllers


@{
    ViewData["Title"] = "AllFatteningView";
}

<a class="btn btn-success" href="@Url.Action("DrawWeightCurve", "Weight")">CreateCurve</a>

<button data-toggle="modal" data-target="#ShowHiden" class="btn btn-primary">Показать откорм по статусу</button>
<div class="modal fade" id="ShowHiden">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Выберите статус и срок с рождения крольчат</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Закрыть">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="FattStatusView">
                    <div class="form-group">
                        <label for="Status">Выберите статус</label>
                        <select type="text" name="Status" class="form-control" id="Status" asp-items="Html.GetEnumSelectList<FatStatus>()"></select>

                    </div>
                    <div class="form-group">
                        <label for="Dates">Дней с рождения</label>
                        <input type="text" name="Dates" class="form-control" id="Dates" value="360">
                    </div>

                    <button type="submit" class="btn btn-primary">Показать</button>
                </form>

            </div>
        </div>
        <div class="modal-footer">

        </div>
    </div>
</div>
<button class="btn btn-success" id="WeightButton" onclick="FillWeightOn()">Запонить вес для всех</button>




<h4>@ViewBag.Message1</h4>
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@

@using (Html.BeginForm("AllFatteningView", "Mate", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <div class="container">
        <table class="table">

            <thead>
                <tr>
                    <th class="col-2">
                        @Html.DisplayNameFor(model => Model[0].Age)
                    </th>
                    <th class="col-1 d-none d-sm-table-cell">
                        @Html.DisplayNameFor(model => Model[0].RabPartId)
                    </th>
                    <th class="col-1 col-sm-2">
                        @Html.DisplayNameFor(model => Model[0].Cage)
                    </th>
                    <th class="col-1 col-sm-4">
                        @Html.DisplayNameFor(model => Model[0].Collor)
                    </th>
                    <th class="col-3 d-none d-sm-table-cell weight">
                        @Html.DisplayNameFor(model => Model[0].BreedString)
                    </th>
                    <th class="col-1 d-none d-sm-table-cell weight">
                        @Html.DisplayNameFor(model => Model[0].ProjectedWeight)
                    </th>
                    <th class="col-2 col-sm-4 showWithWeight">
                        @Html.DisplayNameFor(model => Model[0].StatusForAllFattView)
                    </th>
                    <th class="col-2 d-none d-sm-table-cell">
                        @Html.DisplayNameFor(model => Model[0].Comment)
                    </th>
                    <th class="col-2 d-none weight" id="WeightFiled">
                        @Html.DisplayNameFor(model => Model[0].NewWeight)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {

                <tr id="row-@i" @if (Model[i].Status== FatStatus.selectedForKill) {<text>class="table-warning"</text> }
                    >

                    <td class="col-2 Modals partView" data-toggle="modal" data-target="#modal-@Model[i].PartId-@Model[i].RabPartId">
                        @Html.DisplayFor(modelItem => Model[i].Age)
                    </td>
                    <td class="col-1 d-none d-sm-table-cell">
                        @Html.DisplayFor(modelItem => Model[i].RabPartId)
                    </td>
                    <td class="col-1 col-sm-2 partView" onclick="replaceContentsOfDiv(@Model[i].Cage)">
                        @Html.DisplayFor(modelItem => Model[i].Cage)
                    </td>
                    <td class="col-1 col-sm-4 ">
                        @if (Model[i].Collor == null || Model[i].Collor == "")
                        {<a>...</a>}
                        else
                        {@Html.DisplayFor(modelItem => Model[i].Collor)}
                    </td>
                    <td class="col-3 d-none d-sm-table-cell weight">
                        @Html.DisplayFor(modelItem => Model[i].BreedString)
                    </td>
                    <td class="col-1 d-none d-sm-table-cell weight">
                        @Html.DisplayFor(modelItem => Model[i].ProjectedWeight)
                    </td>
                    <td class="col-2 col-sm-4 showWithWeight">
                        @Html.DisplayFor(modelItem => Model[i].StatusForAllFattView)
                    </td>
                    <td class="col-2 d-none d-sm-table-cell">
                        @Html.DisplayFor(modelItem => Model[i].Comment)
                    </td>
                    <td class="col-2 d-none weight" id="WeightFiled">
                        @*@Html.DisplayFor(modelItem => Model[i].NewWeight)*@
                        @*<input asp-for="Model[i].NewWeight" class="form-control" asp-format="{0:yyyy-MM-dd}" />
            <span asp-validation-for="item.NewWeight" class="text-danger"></span>*@
                        @Html.EditorFor(model => Model[i].NewWeight, new { @class = "NewWeight", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model[i].NewWeight, "", new { @class = "text-danger" })
                    </td>
                    @Html.HiddenFor(model => Model[i].RabPartId)
                    @Html.HiddenFor(model => Model[i].PartId)
                    @Html.HiddenFor(model => Model[i].WeightDate)
                    <div class="modal fade" id="modal-@Model[i].PartId-@Model[i].RabPartId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Кролик @Model[i].RabPartId</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].BornString)
                                        @Html.DisplayFor(modelItem => Model[i].BornString)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].Age)
                                        @Html.DisplayFor(modelItem => Model[i].Age)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].Cage)
                                        @Html.DisplayFor(modelItem => Model[i].Cage)
                                    </div>

                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].RabPartId)
                                        @Html.DisplayFor(modelItem => Model[i].RabPartId)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].MotherId)
                                        @Html.DisplayFor(model => Model[i].MotherId)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].FatherId)
                                        @Html.DisplayFor(model => Model[i].FatherId)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].BreedString)
                                        @Html.DisplayFor(model => Model[i].BreedString)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].Collor)
                                        @Html.DisplayFor(modelItem => Model[i].Collor)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].LastWeight)
                                        @Html.DisplayFor(modelItem => Model[i].LastWeight)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].WeightDateString)
                                        @Html.DisplayFor(modelItem => Model[i].WeightDateString)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].ProjectedWeight)
                                        @Html.DisplayFor(modelItem => Model[i].ProjectedWeight)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].StatusForAllFattView)
                                        @Html.DisplayFor(modelItem => Model[i].StatusForAllFattView)
                                    </div>
                                    <div>
                                        @Html.DisplayNameFor(model => Model[0].Comment)
                                        @Html.DisplayFor(modelItem => Model[i].Comment)
                                    </div>

                                </div>
                                <div class="modal-footer d-block">
                                    @if ((int)Model[i].Status < 2)
                                    {
                                        <a class="d-block btn btn-link compItem" href="@Url.Action("FattKilled", "Mate", new { PartId = Model[i].PartId, rabId = Model[i].RabPartId, CalledFrom = Caller.allfatt})">Забит на мясо</a>
                                        <a class="d-block btn btn-link compItem" href="@Url.Action("AddRabbit", "Home", new FatteningModel(){ MotherId = Model[i].MotherId,
                                                                                        FatherId=Model[i].FatherId,Born=Model[i].Born,RabPartId=Model[i].RabPartId,PartId=Model[i].PartId,
                                                                                        RabbitGender=Model[i].RabbitGender,Collor=Model[i].Collor})">Перенести в кролики</a>

                                    }
                                    <a class="d-block btn btn-link compItem" href="@Url.Action("FattEdit", "Mate", new {PartId = Model[i].PartId, rabId = Model[i].RabPartId, CalledFrom = Caller.allfatt})">Редактировать</a>

                                    <a class="d-block btn btn-link compItem" href="@Url.Action("FatWeightCreate", "Weight", new {partId = Model[i].PartId, rabId = Model[i].RabPartId, CalledFrom = Caller.allfatt})">Новое взвешивание</a>
                                    <a class="d-block btn btn-link" href="@Url.Action("FatWeightView", "Weight", new {rabId = Model[i].RabPartId, partId = Model[i].PartId })">Взвешивания</a>
                                    <a class="d-block btn btn-link" href="@Url.Action("FatteningView", "Mate", new {partId = Model[i].PartId})">Окрол</a>

                                    @if ((int)Model[i].Status < 2)
                                    {
                                        <a class="btn btn-danger" data-toggle="modal" data-target="#dieditself-@Model[i].PartId-@Model[i].RabPartId">Сам умер</a>
                                        <a class="btn btn-warning" data-toggle="modal" data-target="#selectForKill-@Model[i].PartId-@Model[i].RabPartId">На забой</a>
                                    }
                                    <a class="btn btn-danger" data-toggle="modal" data-target="#delete-@Model[i].PartId-@Model[i].RabPartId">Удалить</a>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal" id="selectForKill-@Model[i].PartId-@Model[i].RabPartId">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">Вы уврены, что хотите отметить этого кролика в забой?</h4>
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                </div>

                                <div class="modal-footer">
                                    <a class="btn btn-warning" href="@Url.Action("SelectForKill","Mate",new { PartId = Model[i].PartId, rabId = Model[i].RabPartId})">На забой</a>
                                </div> <button type="button" class="btn btn-info" data-dismiss="modal">Не забивать</button>

                            </div>
                        </div>
                    </div>
                    <div class="modal" id="delete-@Model[i].PartId-@Model[i].RabPartId">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">Вы уврены, что хотите удалить кролика @Model[i].PartId?</h4>
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                </div>

                                <div class="modal-footer">
                                    <a class="btn btn-danger" href="@Url.Action("FattDelete","Mate",new { PartId = Model[i].PartId, rabId = Model[i].RabPartId, CalledFrom = Caller.allfatt })">Удалить</a>
                                </div> <button type="button" class="btn btn-info" data-dismiss="modal">Не удалять</button>

                            </div>
                        </div>
                    </div>
                    <div class="modal" id="dieditself-@Model[i].PartId-@Model[i].RabPartId">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">Подтвердите что кролик @Model[i].RabPartId умер сам</h4>
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                </div>

                                <div class="modal-footer">
                                    <a class="btn btn-danger" href="@Url.Action("FattDelete","Mate",new { PartId = Model[i].PartId, rabId = Model[i].RabPartId, CalledFrom = Caller.allfatt })">Отметить как умер сам</a>
                                </div> <button type="button" class="btn btn-info" data-dismiss="modal">Отменить</button>

                            </div>
                        </div>
                    </div>
                </tr>


                }
            </tbody>
        </table>
        <div class="form-group d-none" id="SaveButton">
            <div class="col-md-offset-2 col-md-10">

                <input type="submit" value="Сохранить взвешивания" class="btn btn-success" />
            </div>
        </div>
    </div>

}

<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>
<div id="CageImage" class="modal fade">
    <div id="dialogCageImage" class="modal-dialog"></div>
</div>
@*@{
    var myChart = new Chart(width: 600, height: 400)
        .AddTitle("Chart Title")
        .AddSeries(
            name: "Employee",
            xValue: new[] { "Peter", "Andrew", "Julie", "Mary", "Dave" },
            yValues: new[] { "2", "6", "4", "5", "3" })
        .Write();*@
}
<script src="/js/cageImage.js"></script>
@section scripts
{
    <script type="text/javascript">

        $('form input').keydown(function (e) {
            if (e.keyCode == 13) {
                e.preventDefault();
                return false;
            }
        });
        $(function () {
            $.ajaxSetup({ cache: false });
            $(".compItem").click(function (e) {

                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#dialogContent').html(data);
                    $('#modDialog').modal('show');
                });
            });
        });
        function FillWeightOn() {
            if ($('#WeightButton').hasClass('btn-success')) {
                if ($(window).width() < 560) {
                    
                    $('.showWithWeight').addClass('d-none');
                }
                $('.weight').removeClass('d-none');
               // $('.Modals').removeAttr('data-toggle');
                $('#WeightButton').removeClass('btn-success').addClass('btn-danger')
                
            } else {
                if ($(window).width() < 560) {
                    
                    $('.showWithWeight').removeClass('d-none');
                }
                $('.weight').addClass('d-none');
                //$('.Modals').attr('data-toggle', 'modal');
                $('#WeightButton').removeClass('btn-danger').addClass('btn-success')
                
                
            }
        }
        $("input").change(function () {
            if ($(this).val() !== 0) $(this).closest('tr').addClass('modal-body table-success');
            else $(this).closest('tr').removeClass('modal-body table-success');
            $('#SaveButton').removeClass('d-none')
        });
        function replaceContentsOfDiv(CageId) {
            $.ajax({
                url: '@Url.Action("CageDetail", "Cage")',
                data: { _id: CageId },
                type: "POST",
                success: function (data) {
                    $('#dialogCageImage').html(data);
                    $('#CageImage').modal('show');
                }
            });
        };

    </script>
}

@*@(await Html.RenderComponentAsync<RazorComponentLibrary.ExamplComponent>(RenderMode.ServerPrerendered))*@