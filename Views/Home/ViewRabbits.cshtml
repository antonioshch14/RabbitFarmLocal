@model IEnumerable<RabbitFarmLocal.Models.DLRabbitModel>
@using System.Web.Helpers

@*@{
    var myChart = new Chart(width: 600, height: 400)
       .AddTitle("Employees")
       .AddSeries(chartType: "column",
          xValue: new[] { "Peter", "Andrew", "Julie", "Mary", "Dave" },
          yValues: new[] { "2", "6", "4", "5", "3" })
       .Write();
}*@

<h2>Кролики</h2>


@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@

@*@(await Html.RenderComponentAsync<RazorComponentLibrary.ExamplComponent>(RenderMode.ServerPrerendered))*@
<p>
    @Html.ActionLink("Добавить кролика", "AddRabbit", new { }, new { @class = "compItem" })
</p>

<!--<p>
    @Html.ActionLink("Обновить статус", "UpdateStatus")
</p>-->
<a class="btn btn-success" href="@Url.Action("UpdateRabbitsStatusView", "Home")">Обновить статус</a>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RabbitId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Cage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StoredRabStatus)
        </th>
        <th class="d-none d-sm-table-cell">
            @Html.DisplayNameFor(model => model.Breed)
        </th>
        <th class="d-none d-sm-table-cell">
            @Html.DisplayNameFor(model => model.Collor)
        </th>

        <th class="d-none d-sm-table-cell">
            @Html.DisplayNameFor(model => model.Mother)
        </th>
        <th class="d-none d-sm-table-cell">
            @Html.DisplayNameFor(model => model.Father)
        </th>

        <th class="d-none d-sm-table-cell">
            @Html.DisplayNameFor(model => model.BornString)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr data-toggle="modal" data-target="#modal-@item.Id">
            <td>
                @Html.DisplayFor(modelItem => item.RabbitId)
            </td>
            @if (item.IsAlive)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Cage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StoredRabStatus)
                </td>
            }
            else
            {
                <td>-</td>
                <td>история</td>

            }


            <td class="d-none d-sm-table-cell">
                @Html.DisplayFor(modelItem => item.Breed)
            </td>
            <td class="d-none d-sm-table-cell">
                @Html.DisplayFor(modelItem => item.Collor)
            </td>

            <td class="d-none d-sm-table-cell">
                @Html.DisplayFor(modelItem => item.Mother)
            </td>
            <td class="d-none d-sm-table-cell">
                @Html.DisplayFor(modelItem => item.Father)
            </td>

            <td class="d-none d-sm-table-cell">
                @Html.DisplayFor(modelItem => item.BornString)
            </td>

            @*<td onclick="Toggle(@item.Id)">...</td>*@

        </tr>
        <div class="modal fade" id="modal-@item.Id" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Кролик @item.RabbitId</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div>
                            @Html.DisplayNameFor(model => model.RabbitId)
                            @Html.DisplayFor(modelItem => item.RabbitId)
                        </div>
                        <div>
                            @Html.DisplayNameFor(model => model.Cage)
                            @Html.DisplayFor(modelItem => item.Cage)
                        </div>

                        <div>
                            @Html.DisplayNameFor(model => model.StoredRabStatus)
                            @Html.DisplayFor(modelItem => item.StoredRabStatus)
                        </div>
                        <div>
                            @Html.DisplayNameFor(model => model.Breed)
                            @Html.DisplayFor(modelItem => item.Breed)
                        </div>
                        <div>
                            @Html.DisplayNameFor(model => model.Collor)
                            @Html.DisplayFor(modelItem => item.Collor)
                        </div>

                        <div>
                            @Html.DisplayNameFor(model => model.Mother)
                            @Html.DisplayFor(modelItem => item.Mother)
                        </div>
                        <div>
                            @Html.DisplayNameFor(model => model.Father)
                            @Html.DisplayFor(modelItem => item.Father)
                        </div>

                        <div>
                            @Html.DisplayNameFor(model => model.BornString)
                            @Html.DisplayFor(modelItem => item.BornString)
                        </div>
                        <div>
                            @Html.DisplayNameFor(model => model.Age)
                            @Html.DisplayFor(modelItem => item.Age)
                        </div>
                        @if (!item.IsAlive)
                        {
                            <div>
                                @Html.DisplayNameFor(model => model.TermDateString)
                                @Html.DisplayFor(modelItem => item.TermDateString)
                            </div>
                            <div>
                                @Html.DisplayNameFor(model => model.Weight)
                                @Html.DisplayFor(modelItem => item.Weight)
                            </div>
                            <div>
                                @Html.DisplayNameFor(model => model.Price)
                                @Html.DisplayFor(modelItem => item.Price)
                            </div>
                        }
                    </div>
                    <div class="modal-footer d-block">

                        <a class="d-block btn btn-link" href="@Url.Action("RabEdit", "Home", new {id = item.Id})">Редактировать</a>
                        <a class="d-block btn btn-link" href="@Url.Action("CommentsView", "Home", new {id = item.RabbitId})">Коментарий</a>
                        <a class="d-block btn btn-link" href="@Url.Action("FUllRabbitView", "Home", new {id=item.Id})">Подробно</a>
                        @if (!item.IsMale)
                        {
                            <a class="d-block btn btn-link" href="@Url.Action("MateView", "Mate", new {id = item.RabbitId})">Покрытия</a>
                        }
                        else
                        {
                            <a class="d-block btn btn-link" href="@Url.Action("MaleMate", "Mate", new {id = item.RabbitId})">Случки</a>
                        }
                        <a class="d-block btn btn-link" href="@Url.Action("ParturView", "Mate", new {id = item.RabbitId})">Окролы</a>
                        <a class="d-block btn btn-link" href="@Url.Action("RabWeightView", "Weight", new {rabId = item.RabbitId})">Взвешивание</a>
                        <a class="btn btn-secondary" href="@Url.Action("DeadRabbit", "Home", new {id = item.Id})">В историю</a>
                        <a class="btn btn-danger" data-toggle="modal" data-target="#delete-@item.Id">Удалить</a>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>

                    </div>
                </div>
            </div>
        </div>
        <div class="modal" id="delete-@item.Id">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Вы уврены, что хотите удалить кролика @item.RabbitId?</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <div class="modal-footer">
                        <a class="btn btn-danger" href="@Url.Action("Delete","Home",new { id = item.RabbitId })">Удалить</a>
                    </div> <button type="button" class="btn btn-info" data-dismiss="modal">Не удалять</button>

                </div>
            </div>
        </div>
        <!--<div class="modal" id="d" tabindex="-1" role="dialog">
            <td style="display: none " colspan="4" Id="@item.Id">
                <a style="display:none"> @Html.DisplayFor(modelItem => item.Id)</a>-->
        @*@Html.ActionLink("Редактировать", "RabEdit", new { id = item.Id }) |*@
        @*@Html.ActionLink("Коментарий", "CommentsView", new { id = item.RabbitId }) |*@
        @*@Html.ActionLink("Подробно", "FUllRabbitView", item) |*@
        @*@if (!item.IsMale)
            {
                <a>
                    @Html.ActionLink("Покрытия", "MateView", "Mate", routeValues: new { id = item.RabbitId }, htmlAttributes: null) |
                </a>

            }
            else
            {
                <a>
                    @Html.ActionLink("Случки", "MaleMate", "Mate", routeValues: new { id = item.RabbitId }, htmlAttributes: null) |
                </a>
            }*@
        @*@Html.ActionLink("Окролы", "ParturView", "Mate", routeValues: new { id = item.RabbitId }, htmlAttributes: null) |*@
        @*@Html.ActionLink("Взвешивание", "RabWeightView", "Weight", routeValues: new { rabId = item.RabbitId }, htmlAttributes: null) |*@

        @*@Html.ActionLink("В историю", "DeadRabbit", new { id = item.RabbitId }, new { onclick = "return confirm('Вы уверены, что хотите перенести кролика в историю?');" }) |
            @Html.ActionLink("Удалить", "Delete", new { id = item.RabbitId }, new { onclick = "return confirm('Вы уверены, что хотите удалить всю информацию про кролика " + item.RabbitId + "?');" })*@

        <!--</td>
        </div>-->


    }

</table>
<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

@section scripts
{
    <script type="text/javascript">

        $(function () {
            $.ajaxSetup({ cache: false });
            $(".compItem").click(function (e) {

                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#dialogContent').html(data);
                    $('#modDialog').modal('show');
                });
            });
        })
                    //function Toggle(Id) {
                    //    $('#' + Id).toggle();


                    //}
    </script>
}